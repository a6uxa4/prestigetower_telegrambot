const { Submissions } = require("../models/submissions.model");

const AddSubmissions = async (req, res, next) => {
  try {
    const { officeNumber, userName, phoneNumber, floorNumber } = req.body;

    if (!officeNumber || !userName || !phoneNumber || !floorNumber) {
      return res.status(400).json({ error: "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è !" });
    }

    let applicationText = floorNumber === 0 ? "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è" : floorNumber;
    let officeText = officeNumber === 0 ? "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è" : `‚Ññ${officeNumber}`;

    const newSubmission = new Submissions({
      officeNumber: officeText,
      userName,
      phoneNumber,
      floorNumber: applicationText,
      officeText,
    });

    await newSubmission.save();

    try {
      await global.bot.telegram.sendMessage(
        process.env.GROUP_CHAT_ID,
        `‚úÖ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:\n` +
          `--------------------\n` +
          ` üè¢ –≠—Ç–∞–∂: ${applicationText} \n\n` +
          ` üè¢ –û—Ñ–∏—Å: ${officeText} \n\n` +
          ` üë§ –ò–º—è: ${userName} \n\n` +
          ` üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${phoneNumber} \n` +
          `--------------------`
      );
      console.log("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram");
    } catch (telegramError) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram:", telegramError);
    }

    res
      .status(200)
      .json({ message: "–£—Å–ø–µ—à–Ω–æ –æ—Å—Ç–∞–≤–∏–ª–∏ –∑–∞—è–≤–∫—É !", newSubmission });
  } catch (error) {
    next(error);
  }
};

module.exports = { AddSubmissions };
